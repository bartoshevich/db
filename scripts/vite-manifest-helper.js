// scripts/vite-manifest-helper.js - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è –≤–µ—Ä—Å–∏—è

import * as fs from 'node:fs';
import path from 'path';

// =================================================================
// –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° VITE –ú–ê–ù–ò–§–ï–°–¢–û–ú
// =================================================================

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç Vite –º–∞–Ω–∏—Ñ–µ—Å—Ç —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 * @param {string} manifestPath - –ü—É—Ç—å –∫ –º–∞–Ω–∏—Ñ–µ—Å—Ç—É
 * @returns {Object|null} - –û–±—ä–µ–∫—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –∏–ª–∏ null
 */
export function loadViteManifest(manifestPath = '_site/assets/manifest.json') {
  const fullPath = path.resolve(process.cwd(), manifestPath);
  
  // –í dev —Ä–µ–∂–∏–º–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ –Ω—É–∂–µ–Ω
  if (process.env.ELEVENTY_ENV !== 'production') {
    return null;
  }
  
  try {
    if (!fs.existsSync(fullPath)) {
      throw new Error(`–ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${fullPath}`);
    }
    
    const manifestContent = fs.readFileSync(fullPath, 'utf8');
    const manifest = JSON.parse(manifestContent);
    
    console.log(`‚úÖ Vite manifest –∑–∞–≥—Ä—É–∂–µ–Ω (${Object.keys(manifest).length} –∑–∞–ø–∏—Å–µ–π)`);
    return manifest;
    
  } catch (error) {
    console.error(`üö® –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Vite manifest: ${error.message}`);
    
    if (process.env.ELEVENTY_ENV === 'production') {
      throw new Error('–í production —Ä–µ–∂–∏–º–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ "npm run build:vite" –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π Eleventy.');
    }
    
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç URL –∞—Å—Å–µ—Ç–∞ –¥–ª—è dev –∏–ª–∏ prod —Ä–µ–∂–∏–º–∞
 * @param {string} assetKey - –ö–ª—é—á –∞—Å—Å–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'assets/scripts/main.js')
 * @param {Object|null} manifest - –û–±—ä–µ–∫—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
 * @param {string} devServerUrl - URL dev-—Å–µ—Ä–≤–µ—Ä–∞ Vite
 * @returns {string} - –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∞—Å—Å–µ—Ç—É
 */
export function getAssetUrl(assetKey, manifest = null, devServerUrl = 'http://localhost:5173') {
  // –í dev —Ä–µ–∂–∏–º–µ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º Vite dev server
  if (process.env.ELEVENTY_ENV !== 'production') {
    const cleanKey = assetKey.startsWith('/') ? assetKey.slice(1) : assetKey;
    return `${devServerUrl}/${cleanKey}`;
  }
  
  // –í production –∏—â–µ–º –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ
  if (!manifest || !manifest[assetKey]) {
    console.warn(`üö® –ê—Å—Å–µ—Ç "${assetKey}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ`);
    return `/${assetKey}`;
  }
  
  const entry = manifest[assetKey];
  if (!entry.file) {
    console.warn(`üö® –§–∞–π–ª –¥–ª—è –∞—Å—Å–µ—Ç–∞ "${assetKey}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ`);
    return `/${assetKey}`;
  }
  
  return `/assets/${entry.file}`;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML —Ç–µ–≥–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∞—Å—Å–µ—Ç–æ–≤
 * @param {string} entryKey - –ö–ª—é—á entry point (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'assets/scripts/main.js')
 * @param {Object|null} manifest - –û–±—ä–µ–∫—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
 * @param {string} devServerUrl - URL dev-—Å–µ—Ä–≤–µ—Ä–∞ Vite
 * @returns {string} - HTML —Ç–µ–≥–∏
 */
export function generateAssetTags(entryKey, manifest = null, devServerUrl = 'http://localhost:5173') {
  // –í dev —Ä–µ–∂–∏–º–µ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–µ–≥ script - Vite —Å–∞–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç CSS
  if (process.env.ELEVENTY_ENV !== 'production') {
    return `<script type="module" src="${devServerUrl}/${entryKey}"></script>`;
  }
  
  // –í production –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–µ —Ç–µ–≥–∏
  if (!manifest || !manifest[entryKey]) {
    console.warn(`üö® Entry point "${entryKey}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ`);
    return '';
  }
  
  const entry = manifest[entryKey];
  let tags = '';
  
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º CSS —Ñ–∞–π–ª—ã
  if (entry.css && entry.css.length > 0) {
    entry.css.forEach(cssFile => {
      tags += `<link rel="stylesheet" href="/assets/${cssFile}">\n`;
    });
  }
  
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π JS —Ñ–∞–π–ª
  if (entry.file) {
    tags += `<script type="module" src="/assets/${entry.file}"></script>`;
  }
  
  return tags;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Vite dev client –¥–ª—è HMR
 * @param {string} devServerUrl - URL dev-—Å–µ—Ä–≤–µ—Ä–∞ Vite
 * @returns {string} - HTML —Ç–µ–≥ –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
 */
export function generateDevClient(devServerUrl = 'http://localhost:5173') {
  if (process.env.ELEVENTY_ENV === 'production') {
    return '';
  }
  
  return `<script type="module" src="${devServerUrl}/@vite/client"></script>`;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç preload —Ç–µ–≥–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
 * @param {string[]} entryKeys - –ú–∞—Å—Å–∏–≤ entry points –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏
 * @param {Object|null} manifest - –û–±—ä–µ–∫—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
 * @returns {string} - HTML —Ç–µ–≥–∏ preload
 */
export function generatePreloadLinks(entryKeys = [], manifest = null) {
  // Preload —Ç–æ–ª—å–∫–æ –≤ production
  if (process.env.ELEVENTY_ENV !== 'production' || !manifest) {
    return '';
  }
  
  const links = new Set();
  
  entryKeys.forEach(entryKey => {
    const entry = manifest[entryKey];
    if (!entry) return;
    
    // Preload –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if (entry.file) {
      links.add(`<link rel="modulepreload" href="/assets/${entry.file}">`);
    }
    
    // Preload CSS
    if (entry.css) {
      entry.css.forEach(cssFile => {
        links.add(`<link rel="preload" href="/assets/${cssFile}" as="style">`);
      });
    }
    
    // Preload –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã—Ö –º–æ–¥—É–ª–µ–π
    if (entry.imports) {
      entry.imports.forEach(importKey => {
        const importEntry = manifest[importKey];
        if (importEntry && importEntry.file) {
          links.add(`<link rel="modulepreload" href="/assets/${importEntry.file}">`);
        }
      });
    }
  });
  
  return Array.from(links).join('\n');
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å —Ö–µ–ª–ø–µ—Ä–∞–º–∏ –¥–ª—è Eleventy
 * @param {Object|null} manifest - –û–±—ä–µ–∫—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
 * @param {string} devServerUrl - URL dev-—Å–µ—Ä–≤–µ—Ä–∞ Vite
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏-—Ö–µ–ª–ø–µ—Ä–∞–º–∏
 */
export function createEleventyHelpers(manifest = null, devServerUrl = 'http://localhost:5173') {
  return {
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –∞—Å—Å–µ—Ç–∞
    viteAsset: (assetKey) => getAssetUrl(assetKey, manifest, devServerUrl),
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–≥–æ–≤ –∞—Å—Å–µ—Ç–æ–≤
    viteAssetTags: (entryKey) => generateAssetTags(entryKey, manifest, devServerUrl),
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ dev client
    viteDevClient: () => generateDevClient(devServerUrl),
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è preload —Å—Å—ã–ª–æ–∫
    vitePreloadLinks: (entryKeys = []) => generatePreloadLinks(entryKeys, manifest),
    
    // –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
    viteDev: (devContent, prodContent = '') => {
      return process.env.ELEVENTY_ENV !== 'production' ? devContent : prodContent;
    },
    
    // URL dev —Å–µ—Ä–≤–µ—Ä–∞
    viteDevServerUrl: devServerUrl,
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ
    viteBuildInfo: () => ({
      isDev: process.env.ELEVENTY_ENV !== 'production',
      isProd: process.env.ELEVENTY_ENV === 'production',
      hasManifest: !!manifest,
      manifestEntries: manifest ? Object.keys(manifest).length : 0
    })
  };
}

/**
 * –°–ª–µ–¥–∏—Ç –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –≤ dev —Ä–µ–∂–∏–º–µ
 * @param {string} manifestPath - –ü—É—Ç—å –∫ –º–∞–Ω–∏—Ñ–µ—Å—Ç—É
 * @param {Function} callback - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
 */
export function watchManifest(manifestPath = '_site/assets/manifest.json', callback = () => {}) {
  if (process.env.ELEVENTY_ENV === 'production') {
    return;
  }
  
  const fullPath = path.resolve(process.cwd(), manifestPath);
  
  if (fs.existsSync(fullPath)) {
    fs.watchFile(fullPath, (curr, prev) => {
      if (curr.mtime !== prev.mtime) {
        callback();
      }
    });
  }
}

// =================================================================
// –≠–ö–°–ü–û–†–¢ –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ
// =================================================================

export default {
  loadViteManifest,
  getAssetUrl,
  generateAssetTags,
  generateDevClient,
  generatePreloadLinks,
  createEleventyHelpers,
  watchManifest
};