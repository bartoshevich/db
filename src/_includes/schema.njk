{# --- НАЧАЛО БЛОКА JSON-LD --- #}
{% set schemaParts = [] %}

{# Добавляем глобальную Организацию всегда, если она есть #}
{% if site.schemaOrg.organization %}
  {% set dummy = schemaParts.push(site.schemaOrg.organization) %}
{% endif %}

{# Добавляем Person всегда, если он есть #}
{% if site.schemaOrg.person %}
  {% set dummy = schemaParts.push(site.schemaOrg.person) %}
{% endif %}

{# Добавляем WebSite только на главной странице #}
{% if page.url == '/' and site.schemaOrg.webSite %}
  {% set dummy = schemaParts.push(site.schemaOrg.webSite) %}
  
  {% if site.schemaOrg.specialAnnouncement %}
    {% set dummy = schemaParts.push(site.schemaOrg.specialAnnouncement) %}
  {% endif %}
{% endif %}

{# --- НАЧАЛО: Добавляем схему Blog только на странице блога --- #}
{% if page.url == '/blog/' %}
  {# Создаем базовый объект блога #}
  {% set blogSchema = {
    "@type": "Blog",
    "name": page.data.name | default(page.data.title),
    "description": page.data.description,
    "url": (site.url | default('https://bartoshevich.by')) + page.url,
    "author": {
      "@id": "https://bartoshevich.by/about/#person"
    },
    "publisher": {
      "@id": "https://bartoshevich.by/#service"
    },
    "mainEntity": {
      "@id": "https://bartoshevich.by/#service"
    }
  } %}
  
  {# Добавляем дату публикации, если она есть #}
  {% if page.date %}
    {% set blogWithPublished = {
      "@type": blogSchema["@type"],
      "name": blogSchema.name,
      "description": blogSchema.description,
      "url": blogSchema.url,
      "datePublished": page.date | isoDate,
      "author": blogSchema.author,
      "publisher": blogSchema.publisher,
      "mainEntity": blogSchema.mainEntity
    } %}
    {% set blogSchema = blogWithPublished %}
  {% endif %}
  
  
  
  {# Добавляем дату модификации #}
  {% if page.date %}
    {# Если есть дата публикации, сохраняем её при добавлении модификации #}
    {% set blogWithModified = {
      "@type": blogSchema["@type"],
      "name": blogSchema.name,
      "description": blogSchema.description,
      "url": blogSchema.url,
      "datePublished": blogSchema.datePublished,
      "dateModified": config.buildDate,
      "author": blogSchema.author,
      "publisher": blogSchema.publisher,
      "mainEntity": blogSchema.mainEntity
    } %}
  {% else %}
    {# Если даты публикации нет, добавляем только модификацию #}
    {% set blogWithModified = {
      "@type": blogSchema["@type"],
      "name": blogSchema.name,
      "description": blogSchema.description,
      "url": blogSchema.url,
      "dateModified": config.buildDate,
      "author": blogSchema.author,
      "publisher": blogSchema.publisher,
      "mainEntity": blogSchema.mainEntity
    } %}
  {% endif %}
  
  {% set blogSchema = blogWithModified %}
  
  {# Добавляем готовый объект блога в основной массив схем #}
  {% set dummy = schemaParts.push(blogSchema) %}
{% endif %}
{# --- КОНЕЦ: Добавляем схему Blog только на странице блога --- #}

{# --- НАЧАЛО: Добавляем BlogPosting для всех статей на странице блога --- #}
{% if page.url == '/blog/' and collections.post | length > 0 %}
  {% set blogPostingSchemas = [] %}
  
  {% for post in collections.post %}
    {% set postSchema = {
      "@type": "BlogPosting",
      "headline": post.data.title | decodeEntities | safe,
      "name": post.data.title | decodeEntities | safe,
      "datePublished": post.date | isoDate,
      "description": post.data.description | decodeEntities | safe,
      "url": site.url + post.url,
      "author": {
        "@id": "https://bartoshevich.by/about/#person"
      },
      "publisher": {
        "@id": "https://bartoshevich.by/#service"
      },
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": site.url + post.url
      }
    } %}
    
    {# Добавляем дату модификации, если она есть #}
    {% if post.data.last_modified_at %}
      {% set postWithModified = postSchema %}
      {% set postWithModified = postWithModified | setAttribute("dateModified", post.data.last_modified_at | isoDate) %}
      {% set postSchema = postWithModified %}
    {% endif %}
    
    {# Добавляем изображение, если оно есть #}
    {% if post.data.image %}
      {% set postWithImage = postSchema %}
      {% set postWithImage = postWithImage | setAttribute("image", site.url + post.data.image) %}
      {% set postSchema = postWithImage %}
    {% endif %}
    
    {% set dummy = blogPostingSchemas.push(postSchema) %}
  {% endfor %}
  
  {# Добавляем все BlogPosting схемы в основной массив #}
  {% for postSchema in blogPostingSchemas %}
    {% set dummy = schemaParts.push(postSchema) %}
  {% endfor %}
{% endif %}
{# --- КОНЕЦ: Добавляем BlogPosting для всех статей на странице блога --- #}



{# --- НАЧАЛО: Добавляем BlogPosting для отдельной страницы поста --- #}
{% if page.url.startsWith('/blog/') and page.url != '/blog/' %}
  {% set postSchema = {
    "@type": "BlogPosting",
    "headline": title | decodeEntities | safe,
    "name": title | decodeEntities | safe,
    "description": description | decodeEntities | safe,
    "datePublished": page.date | isoDate,
    "url": site.url + page.url,
    "author": {
      "@id": "https://bartoshevich.by/about/#person"
    },
    "publisher": {
      "@id": "https://bartoshevich.by/#service"
    },
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": site.url + page.url
    }
  } %}

  {# Добавляем дату модификации, если она есть #}
  {% if last_modified_at %}
    {% set postSchema = postSchema | setAttribute("dateModified", last_modified_at | isoDate) %}
  {% endif %}

  {# Добавляем изображение, используя значение по умолчанию, если image не указан #}
  {% set imageUrl = image | default('/assets/images/main/bartoshevichby.png') %}
  {% set postSchema = postSchema | setAttribute("image", site.url + imageUrl) %}

  {# Добавляем схему BlogPosting в основной массив #}
  {% set dummy = schemaParts.push(postSchema) %}
{% endif %}
{# --- КОНЕЦ: Добавляем BlogPosting для отдельной страницы поста --- #}





{# --- НАЧАЛО: Добавляем CollectionPage для страницы Услуги --- #}

{% if page.url == '/uslugi/' %}
  {% set collectionPageSchema = {
    "@type": "CollectionPage",
    "headline": title | decodeEntities | safe,
    "description": description | decodeEntities | safe,
    "url": site.url + page.url,
    "mainEntity": {
      "@type": "ItemList",
      "itemListElement": [
        {
          "@type": "ListItem",
          "position": 1,
          "url": site.url + "/uslugi/marketing-audit/",
          "name": "Аудит маркетинга"
        },
        {
          "@type": "ListItem",
          "position": 2,
          "url": site.url + "/uslugi/brand-conception/",
          "name": "Разработка концепции бренда"
        },
        {
          "@type": "ListItem",
          "position": 3,
          "url": site.url + "/uslugi/razrabotka-reklamnyh-kampanij/",
          "name": "Разработка рекламных кампаний"
        },
        {
          "@type": "ListItem",
          "position": 4,
          "url": site.url + "/uslugi/autsorsing-marketinga/",
          "name": "Абонентское обслуживание"
        }
        
      ]
    }
  } %}
  
  {% set dummy = schemaParts.push(collectionPageSchema) %}
{% endif %}

{# --- КОНЕЦ: Добавляем CollectionPage для страницы Услуги --- #}



{# --- НАЧАЛО: Добавляем схемы для отдельных страниц услуг --- #}

{# Аудит маркетинга #}
{% if page.url == '/uslugi/marketing-audit/' %}
  {% set serviceSchema = {
    "@type": "Service",
    "name": "Аудит маркетинга",
    "serviceType": "Marketing Audit",
    "provider": {
      "@id": "https://bartoshevich.by/#service"
    },
    "offers": {
      "@type": "Offer",
      "priceCurrency": "EUR",
      "price": "300",
      "priceSpecification": {
        "@type": "PriceSpecification",
        "valueAddedTaxIncluded": true,
        "minPrice": "300",
        "maxPrice": "1000"
      }
    },
    "description": description | escape,
    "url": site.url + page.url
  } %}
  
  {% set dummy = schemaParts.push(serviceSchema) %}
{% endif %}

{# Разработка концепции бренда #}
{% if page.url == '/uslugi/brand-conception/' %}
  {% set serviceSchema = {
    "@type": "Service",
    "name": "Разработка концепции бренда",
    "serviceType": "Brand Strategy Development",
    "provider": {
      "@id": "https://bartoshevich.by/#service"
    },
    "offers": {
      "@type": "Offer",
      "priceCurrency": "EUR",
      "price": "3000",
      "priceSpecification": {
        "@type": "PriceSpecification",
        "valueAddedTaxIncluded": true,
        "minPrice": "3000",
        "maxPrice": "10000"
      }
    },
    "description": description | escape,
    "url": site.url + page.url,
    "serviceOutput": {
      "@type": "Thing",
      "name": "Детально проработанная концепция бренда с позиционированием и стратегией развития"
    },
    "subjectOf": {
      "@type": "HowTo",
      "name": "Процесс разработки концепции бренда",
      "step": [
        {
          "@type": "HowToStep",
          "name": "Анализ бизнеса",
          "text": "Погружение в бизнес клиента, анализ миссии, ценностей и существующего позиционирования."
        },
        {
          "@type": "HowToStep",
          "name": "Анализ конкурентов и клиентов",
          "text": "Исследование рынка, анализ конкурентов и изучение потребностей целевой аудитории."
        },
        {
          "@type": "HowToStep",
          "name": "Создание структуры бренда",
          "text": "Разработка атрибутов, выгод, позиционирования, обещания и личности бренда."
        }
      ]
    }
  } %}
  
  {% set dummy = schemaParts.push(serviceSchema) %}
{% endif %}

{# Разработка рекламных кампаний #}
{% if page.url == '/uslugi/razrabotka-reklamnyh-kampanij/' %}
  {# Сначала добавляем Service #}
  {% set serviceSchema = {
    "@type": "Service",
    "name": "Разработка рекламных кампаний",
    "serviceType": "Advertising Campaign Development",
    "provider": {
      "@id": "https://bartoshevich.by/#service"
    },
    "serviceOutput": [
      "Креативные концепции рекламы",
      "Видеоролики",
      "Аудиоролики",
      "Комплексные рекламные кампании"
    ],
    "offers": {
      "@type": "Offer",
      "priceCurrency": "EUR",
      "price": "2000",
      "priceSpecification": {
        "@type": "PriceSpecification",
        "valueAddedTaxIncluded": true,
        "minPrice": "1000",
        "maxPrice": "3000"
      }
    },
    "description": description | escape,
    "url": site.url + page.url
  } %}
  
  {% set dummy = schemaParts.push(serviceSchema) %}
  
  {# Затем добавляем CreativeWork с портфолио #}
  {% set portfolioSchema = {
    "@type": "CreativeWork",
    "name": "Портфолио рекламных проектов",
    "provider": { "@id": "https://bartoshevich.by/#service" },
    "exampleOfWork": [
      {
        "@type": "CreativeWork",
        "name": "Скидки 3Dom для семей",
        "description": "Концепция скидок в зависимости от стажа семейной жизни для производителя домашней мебели. Размер скидки определялся в зависимости от стажа семейной жизни, что позволило сохранить фокус на ценностях торговой марки.",
        "genre": "Рекламная концепция",
        "creator": { "@id": "https://bartoshevich.by/#service" }
      },
      {
        "@type": "CreativeWork",
        "name": "Идея рекламы для банка Тинькова",
        "description": "Рекламная концепция для банка Тинькова, предложенная в 2012 году через Twitter и получившая положительный отклик от Олега Тинькова.",
        "genre": "Рекламная концепция",
        "creator": { "@id": "https://bartoshevich.by/#service" },
        "sameAs": "https://bartoshevich.by/blog/reklama-dlya-banka-tinkova/",
        "subjectOf": {
          "@type": "VideoObject",
          "name": "Эскиз видеоролика для банка Тинькова",
          "contentUrl": "https://youtu.be/LcRjumujYws",
          "description": "Эскиз видеоролика, демонстрирующий смысл рекламной концепции для банка Тинькова",
          "uploadDate": "2015-09-22T00:00:00+03:00",
          "thumbnailUrl": "https://i.ytimg.com/vi/LcRjumujYws/maxresdefault.jpg",
          "duration": "PT0M27S"
        }
      },
      {
        "@type": "CreativeWork",
        "name": "Цикл промо роликов для Hörmann",
        "description": "Предложил идеи цикла видеороликов и участвовал в их реализации: работал над сценариями, решал организационные вопросы, начиная от поиска и выбора режиссера до постпродакшена роликов.",
        "genre": "Рекламная креативная концепция",
        "creator": { "@id": "https://bartoshevich.by/#service" },
        "sameAs": "https://bartoshevich.by/blog/brand-conception-hormann/",
        "subjectOf": {
          "@type": "VideoObject",
          "name": "Уверенно рекомендуют - ролик для Hörmann",
          "description": "Проморолик белорусского офиса Hörmann.",
          "director": {
            "@type": "Person",
            "name": "Александр Бондарев"
          },
          "url": "https://youtu.be/Rl2jUmZWSfg",
          "contentUrl": "https://youtu.be/Rl2jUmZWSfg",
          "thumbnailUrl": "https://i.ytimg.com/vi/Rl2jUmZWSfg/maxresdefault.jpg",
          "uploadDate": "2020-07-16T00:00:00+03:00",
          "duration": "PT1M06S",
          "contentLocation": {
            "@type": "Place",
            "name": "Беларусь"
          }
        }
      },
      {
        "@type": "AudioObject",
        "name": "Сколько раз нужно сделать, чтобы получилось хорошо?",
        "description": "Рекламный аудиоролик для белорусского офиса Hörmann. Диалог между отцом и сыном подчеркивает опыт Hörmann в производстве гаражных ворот.",
        "creator": { "@id": "https://bartoshevich.by/#service" },
        "duration": "PT0M29S",
        "encodingFormat": "audio/mpeg",
        "contentUrl": "https://bartoshevich.by/assets/media/project/hormann_100.mp3",
        "transcript": "—Папа, а сколько раз нужно сделать, чтобы получилось хорошо? —Сто раз так точно, сынок. —Ого!.. А вот наши ворота... мм, как там... —Хёрманн? —Да, Хёрманн! Им уже 10 лет, а они работают. Вот их сколько раз делали? —Больше 10 миллионов раз. —Так много?! Теперь понятно, почему у них так хорошо получается. Отбивка: «Хёрманн знает, как делать гаражные ворота»."
      },
      {
        "@type": "AudioObject",
        "name": "Как сказать на немецком «гаражные ворота»?",
        "description": "Рекламный аудиоролик для белорусского офиса Hörmann. Диалог персонажей акцентирует внимание на глобальной узнаваемости и распространенности бренда.",
        "creator": { "@id": "https://bartoshevich.by/#service" },
        "duration": "PT0M16S",
        "encodingFormat": "audio/mpeg",
        "contentUrl": "https://bartoshevich.by/assets/media/project/garage_doors_translation.mp3",
        "transcript": "—Как сказать на немецком «гаражные ворота»? —Хёрманн. —А на арабском? —Хёрманн. —А на португальском, скажешь, тоже «Хёрманн»? —И на португальском. Отбивка: «Гаражные ворота Хёрманн — от Аляски до Австралии»"
      }
    ],
    "isPartOf": {
      "@type": "CreativeWork",
      "url": "https://bartoshevich.by/uslugi/razrabotka-reklamnyh-kampanij/"
    }
  } %}
  
  {% set dummy = schemaParts.push(portfolioSchema) %}
{% endif %}

{# Аутсорсинг маркетинга #}
{% if page.url == '/uslugi/autsorsing-marketinga/' %}
  {% set serviceSchema = {
    "@type": "Service",
    "name": "Аутсорсинг маркетинга",
    "serviceType": "Marketing Outsourcing",
    "provider": {
      "@id": "https://bartoshevich.by/#service"
    },
    "offers": {
      "@type": "Offer",
      "priceCurrency": "EUR",
      "price": "1300",
      "priceSpecification": {
        "@type": "PriceSpecification",
        "valueAddedTaxIncluded": true,
        "minPrice": "1300",
        "maxPrice": "2000"
      }
    },
    "description": description | escape,
    "url": site.url + page.url
  } %}
  
  {% set dummy = schemaParts.push(serviceSchema) %}
{% endif %}

{# --- КОНЕЦ: Добавляем схемы для отдельных страниц услуг --- #}


{# --- НАЧАЛО: Добавляем схему AboutPage --- #}
{% if page.url == '/about/' %}
  {% set aboutPageSchema = {
    "@type": "AboutPage",
    "name": title | decodeEntities | safe,
    "description": description | decodeEntities | safe,
    "url": site.url + page.url,
    "datePublished": page.date | isoDate,
    "dateModified": last_modified_at | default(config.buildDate) | isoDate,
    "mainEntity": {
      "@id": "https://bartoshevich.by/about/#person"
    },
    "relatedLink": [
      site.url + "/uslugi/",
      site.url + "/blog/",
      site.url + "/contact/"
    ]
  } %}
  
  {% set dummy = schemaParts.push(aboutPageSchema) %}
{% endif %}
{# --- КОНЕЦ: Добавляем схему AboutPage --- #}

{# --- НАЧАЛО: Добавляем схему ContactPage --- #}
{% if page.url == '/contact/' %}
  {% set contactPageSchema = {
    "@type": "ContactPage",
    "name": title | decodeEntities | safe,
    "description": description | decodeEntities | safe,
    "url": site.url + page.url,
    "datePublished": page.date | isoDate,
    "dateModified": last_modified_at | default(config.buildDate) | isoDate,
    "mainEntity": {
      "@type": "Organization",
      "@id": "https://bartoshevich.by/#service"
    },
    "provider": {
      "@id": "https://bartoshevich.by/about/#person"
    },
    "potentialAction": {
      "@type": "CommunicateAction",
      "name": "Связаться с Дмитрием Бартошевичем",
      "recipient": {
        "@id": "https://bartoshevich.by/about/#person"
      },
      "instrument": [
        {
          "@type": "ContactPoint",
          "contactType": "customer service",
          "telephone": "+375297753340",
          "email": "dmitry@bartoshevich.by",
          "availableLanguage": ["ru", "be", "en"]
        }
      ]
    }
  } %}
  
  {# Добавляем альтернативные способы связи, если они определены во фронтматтере #}
  {% if social_profiles %}
    {% set potentialActionWithSameAs = contactPageSchema.potentialAction | setAttribute("sameAs", social_profiles) %}
    {% set contactPageWithUpdatedAction = contactPageSchema | setAttribute("potentialAction", potentialActionWithSameAs) %}
    {% set contactPageSchema = contactPageWithUpdatedAction %}
  {% endif %}
  
  {% set dummy = schemaParts.push(contactPageSchema) %}
{% endif %}
{# --- КОНЕЦ: Добавляем схему ContactPage --- #}



{# Добавляем BreadcrumbList, если есть навигация #}
{% set navKey = eleventyNavigation.key %}
{% set isHomepage = page.url == '/' %}

{# Генерируем массив элементов хлебных крошек, если нужно #}
{% if navKey and not isHomepage and collections.navigationItems | length > 0 %}
  {% set breadcrumbItems = getBreadcrumbs(navKey, collections.navigationItems) %}
  
  {# Если breadcrumbItems содержит элементы, создаем схему BreadcrumbList #}
  {% if breadcrumbItems | length > 0 %}
    {% set listElements = [] %}
    
    {% for itemPage in breadcrumbItems %}
      {% set listItem = {
        "@type": "ListItem",
        "position": loop.index,
        "name": itemPage.data.eleventyNavigation.title or itemPage.data.name or itemPage.data.title | default(itemPage.url),
        "item": site.url + itemPage.url
      } %}
      
      {% set dummy = listElements.push(listItem) %}
    {% endfor %}
    
    {% set breadcrumbSchemaObject = {
      "@type": "BreadcrumbList",
      "itemListElement": listElements
    } %}
    
    {# Добавляем готовый объект схемы BreadcrumbList в основной массив схем #}
    {% set dummy = schemaParts.push(breadcrumbSchemaObject) %}
  {% endif %}
{% endif %}

{# Выводим основной скрипт, только если есть что выводить #}
{% if schemaParts | length > 0 %}
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  {% if schemaParts | length == 1 %}
    {{ schemaParts[0] | jsonify | safe }}
  {% else %}
    "@graph": {{ schemaParts | jsonify | safe }}
  {% endif %}
}
</script>
{% endif %}
{# --- КОНЕЦ БЛОКА JSON-LD --- #}

