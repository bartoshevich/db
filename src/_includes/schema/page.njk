{# =======================================
  КОНСТРУКТОР СУЩНОСТЕЙ ТЕКУЩЕЙ СТРАНИЦЫ
======================================== #}
{% set isHomepage = page and page.url == '/' %}
{% if not isHomepage %}

  {# 1) Базовый узел WebPage для любой непервой страницы #}
  {% set webPage = {
    "@type": "WebPage",
    "@id": (page.url | absoluteUrl(site.url)),
    "url": (page.url | absoluteUrl(site.url)),
    "name": (title.val or title) | decodeEntities | replace('"', '\\"'),
    "description": (description.val or description) | decodeEntities | replace('"', '\\"'),
    "inLanguage": "ru",
    "datePublished": page.date | isoDate,
    "dateModified": last_modified_at | default(config.buildDate) | isoDate,
    "isPartOf": { "@id": "https://bartoshevich.by/#website" }
  } %}

  {# 2) Специализация по типам страниц #}
  {% if page.url.startsWith('/blog/') and page.url != '/blog/' %}

    {# 2a) Узел BlogPosting — ОТДЕЛЬНО от WebPage #}
    {% set imageUrl = image | default('/assets/images/main/bartoshevichby.png') %}
    {% set blogPosting = {
      "@type": "BlogPosting",
      "@id": (page.url | absoluteUrl(site.url)) ~ "#post",
      "url": (page.url | absoluteUrl(site.url)),
      "headline": (title.val or title) | decodeEntities | replace('"', '\\"'),
      "author": { "@id": "https://bartoshevich.by/about/#person" },
      "publisher": { "@id": "https://bartoshevich.by/#organization" },
      "image": site.url ~ imageUrl,
      "datePublished": page.date | isoDate,
      "dateModified": last_modified_at | default(config.buildDate) | isoDate,
      "mainEntityOfPage": { "@id": (page.url | absoluteUrl(site.url)) },
      "isPartOf": { "@id": site.url ~ "/blog/" }
    } %}

    {# wordCount по реальному контенту, если доступен #}
    {% if content %}
      {% set blogPosting = blogPosting | setAttribute("wordCount", content | decodeEntities | wordcount) %}
    {% endif %}

    {# (опционально) удаляем interactionStatistic, если нет реальных метрик #}
    {# Если есть реальная метрика, добавьте тут setAttribute("interactionStatistic", {...}) #}

    {# 2b) Спец-страница фильмов #}
      {% if mainEntitySource == "films" %}
      {% set movieItems = [] %}
      {% for film in films.items %}
      {% set itemType = "TVSeries" if film.item_type == "TVSeries" else "Movie" %}
        {% set movieObject = {
          "@type": itemType,
          "url": site.url ~ page.url ~ "#" ~ film.id,
          "name": film.title_ru | replace('"', '\\"'),
          "alternateName": film.title_en | replace('"', '\\"'),
          "image": film.image if film.image else "https://i.ytimg.com/vi/" ~ film.trailer_yt_id ~ "/maxresdefault.jpg",
          "description": film.description | replace('"', '\\"'),
          "datePublished": film.year,
          "director": { "@type": "Person", "name": film.director.name }
        } %}


         {% if film.imdb_id %}
      {% set imdbUrl = "https://www.imdb.com/title/" ~ film.imdb_id ~ "/" %}
      {% set movieObject = movieObject | setAttribute("sameAs", imdbUrl) %}
    {% endif %}

    
        {# Отзывы #}
        {% if film.reviews and (film.reviews | length) > 0 %}
          {% set reviewList = [] %}
          {% for review in film.reviews %}
            {% set reviewObject = {
              "@type": "Review",
              "reviewBody": review.text,
              "reviewRating": { "@type": "Rating", "ratingValue": review.rating, "bestRating": 10, "worstRating": 1 },
              "author": { "@type": "Person", "name": review.author.name }
            } %}
            {% set _ = reviewList.push(reviewObject) %}
          {% endfor %}
          {% set movieObject = movieObject | setAttribute("review", reviewList) %}
        {% endif %}

        {# Реальный aggregateRating #}
         {# Свойство называется aggregateRating, и тип у него должен быть AggregateRating #}
    {% if film.imdb_rating and film.imdb_rating_count %}
      {% set movieObject = movieObject | setAttribute("aggregateRating", {
        "@type": "AggregateRating",
        "ratingValue": film.imdb_rating,
        "ratingCount": film.imdb_rating_count,
        "bestRating": 10,
        "worstRating": 1
      }) %}
    {# ИСПРАВЛЕНИЕ 2: Если есть только рейтинг, но нет количества голосов, используем `review` #}
    {% elif film.imdb_rating %}
       {% set imdbReview = {
            "@type": "Review",
            "author": { "@type": "Organization", "name": "IMDb" },
            "reviewBody": "Рейтинг IMDb: " ~ film.imdb_rating ~ "/10",
            "reviewRating": {
                "@type": "Rating",
                "ratingValue": film.imdb_rating,
                "bestRating": 10,
                "worstRating": 1
            }
        } %}
        {# Добавляем этот отзыв к существующим, если они есть #}
        {% set existingReviews = movieObject.review or [] %}
        {% set _ = existingReviews.push(imdbReview) %}
        {% set movieObject = movieObject | setAttribute("review", existingReviews) %}
    {% endif %}



        {% set listItem = { "@type": "ListItem", "position": loop.index, "item": movieObject } %}
        {% set _ = movieItems.push(listItem) %}
      {% endfor %}

      {% set movieItemList = {
        "@type": "ItemList",
        "name": (title.val or title) | decodeEntities,
        "itemListOrder":  "https://schema.org/ItemListOrderAscending",
        "numberOfItems": movieItems | length,
        "itemListElement": movieItems
      } %}

      {# Размещаем ItemList как mainEntity на WebPage (а не в BlogPosting) #}
      {% set webPage = webPage | setAttribute("mainEntity", movieItemList) %}
    {% endif %}

    {# Добавляем оба узла #}
    {% set _ = schemaParts.push(webPage) %}
    {% set _ = schemaParts.push(blogPosting) %}

  {% elif page.url == '/about/' %}
    {% set aboutPage = webPage | merge({ "@type": "AboutPage", "mainEntity": { "@id": "https://bartoshevich.by/about/#person" } }) %}
    {% set _ = schemaParts.push(aboutPage) %}

  {% elif page.url == '/contact/' %}
    {% set contactPage = webPage | merge({ "@type": "ContactPage", "mainEntity": { "@id": "https://bartoshevich.by/about/#person" } }) %}
    {% set _ = schemaParts.push(contactPage) %}

  {% elif page.url == '/cases/' %}
    {% set collectionPage = webPage | merge({ "@type": "CollectionPage", "creator": { "@id": "https://bartoshevich.by/about/#person" } }) %}
    {% set _ = schemaParts.push(collectionPage) %}

  {% else %}
    {# Любая другая страница — просто WebPage #}
    {% set _ = schemaParts.push(webPage) %}
  {% endif %}

  {# 3) Breadcrumbs #}
  {% include "schema/breadcrumbs.njk" %}

{% endif %}
