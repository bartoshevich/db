// vite.config.js - –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Eleventy
import { defineConfig } from 'vite';
import path from 'path';
import { fileURLToPath } from 'url';
import postcssNesting from 'postcss-nesting';
import autoprefixer from 'autoprefixer';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const isProd = process.env.NODE_ENV === 'production';
const isServe = process.env.VITE_MODE === 'serve';

export default defineConfig({
  // =================================================================
  // –ë–ê–ó–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
  // =================================================================
  
  // –ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –≤ src –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Å—Å–µ—Ç–∞–º
  root: path.resolve(__dirname, 'src'),
  
  // –í dev —Ä–µ–∂–∏–º–µ base –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å '/', –≤ prod - '/assets/'
  base: isServe ? '/' : '/assets/',
  
  
 publicDir: false, // –û—Ç–∫–ª—é—á–∞–µ–º publicDir, —Ç.–∫. –∏—Å–ø–æ–ª—å–∑—É–µ–º src/assets –¥–ª—è –∞—Å—Å–µ—Ç–æ–≤
  
  // =================================================================
  // –ù–ê–°–¢–†–û–ô–ö–ò DEV –°–ï–†–í–ï–†–ê
  // =================================================================
  server: {
    port: 5173,
    host: 'localhost',
    strictPort: true,
    cors: true,
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ HMR –¥–ª—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
    hmr: {
      port: 5173,
      host: 'localhost',
      overlay: true
    },
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è CORS
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization',
      'Access-Control-Allow-Credentials': 'false'
    },
    
    // middleware –¥–ª—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω
    middlewareMode: false,
    
    // –ù–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    open: false,
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    fs: {
      strict: false,
      allow: [
        path.resolve(__dirname),
        path.resolve(__dirname, 'node_modules')
      ]
    }
  },

  // =================================================================
  // –ù–ê–°–¢–†–û–ô–ö–ò –°–ë–û–†–ö–ò
  // =================================================================
  build: {
    // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    outDir: path.resolve(__dirname, '_site/assets'),
    emptyOutDir: true,
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ –¥–ª—è prod
    manifest: "manifest.json",
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏
    minify: isProd ? 'terser' : false,
    terserOptions: isProd ? {
      compress: {
        drop_console: true,
        drop_debugger: true
      },
      format: { comments: false }
    } : {},
    
    cssMinify: isProd,
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ entry points
    rollupOptions: {
      input: {
        // –û—Å–Ω–æ–≤–Ω–æ–π entry point
        main: path.resolve(__dirname, 'src/assets/scripts/main.js'),
        // –î–û–ë–ê–í–õ–Ø–ï–ú –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        'critical-theme': path.resolve(__dirname, 'src/assets/scripts/critical--theme.js')
      },
      
      output: {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
        entryFileNames: isProd ? 'js/[name]-[hash].js' : 'js/[name].js',
        chunkFileNames: isProd ? 'js/[name]-[hash].js' : 'js/[name].js',
        assetFileNames: (assetInfo) => {
          const ext = path.extname(assetInfo.name).slice(1);
          const dirMap = {
            css: 'css',
            js: 'js',
            svg: 'images',
            png: 'images',
            jpg: 'images',
            jpeg: 'images',
            avif: 'images',
            webp: 'images',
            gif: 'images',
            ico: 'images',
            woff: 'fonts',
            woff2: 'fonts'
          };
          const dir = dirMap[ext] || 'misc';
          return isProd ? `${dir}/[name]-[hash][extname]` : `${dir}/[name][extname]`;
        },
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —á–∞–Ω–∫–æ–≤
        manualChunks: isProd ? {
          vendor: ['workbox-window']
        } : undefined
      }
    },
    
    sourcemap: isProd ? false : 'inline',
    reportCompressedSize: isProd,
    target: ['es2020', 'edge88', 'firefox78', 'chrome87', 'safari13.1']
  },

  // =================================================================
  // –ù–ê–°–¢–†–û–ô–ö–ò CSS
  // =================================================================
  css: {
    postcss: {
      plugins: [
        postcssNesting(),
        autoprefixer({
          overrideBrowserslist: [
            '> 1%',
            'last 2 versions',
            'not dead',
            'not ie 11'
          ],
          grid: true,
          flexbox: true
        })
      ]
    },
    
    preprocessorOptions: {
      scss: {
        // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –¥–ª—è SCSS
        additionalData: `
          @use "sass:math";
          @use "sass:color";
          @use "sass:string";
          @use "sass:list";
          @use "sass:map";
        `,
        
        api: 'modern-compiler',
        sourceMap: !isProd,
        charset: false,
        
        includePaths: [
          path.resolve(__dirname, 'src/assets/scss'),
          path.resolve(__dirname, 'src/assets'),
          path.resolve(__dirname, 'node_modules')
        ]
      }
    },
    
    devSourcemap: !isProd
  },

  // =================================================================
  // –ê–õ–ò–ê–°–´ –ò –†–ï–ó–û–õ–í
  // =================================================================
  resolve: {
    alias: {
      '@': path.resolve(__dirname, 'src'),
      '@assets': path.resolve(__dirname, 'src/assets'),
      '@scripts': path.resolve(__dirname, 'src/assets/scripts'),
      '@styles': path.resolve(__dirname, 'src/assets/scss'),
      '@scss': path.resolve(__dirname, 'src/assets/scss')
    }
  },

  // =================================================================
  // –ü–õ–ê–ì–ò–ù–´
  // =================================================================
   plugins: [
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–ª–∞–≥–∏–Ω –¥–ª—è SVG CORS
    {
      name: 'svg-cors-headers',
      configureServer(server) {
        server.middlewares.use((req, res, next) => {
          // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ SVG —Ñ–∞–π–ª–æ–≤
          if (req.url && req.url.includes('.svg')) {
            res.setHeader('Access-Control-Allow-Origin', '*');
            res.setHeader('Access-Control-Allow-Methods', 'GET, HEAD, OPTIONS');
            res.setHeader('Access-Control-Allow-Headers', '*');
            res.setHeader('Content-Type', 'image/svg+xml');
            res.setHeader('Cache-Control', 'no-cache');
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight –∑–∞–ø—Ä–æ—Å–æ–≤
            if (req.method === 'OPTIONS') {
              res.statusCode = 200;
              res.end();
              return;
            }
          }
          next();
        });
      }
    },

    // –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø–ª–∞–≥–∏–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Eleventy
    {
      name: 'eleventy-integration',
      configureServer(server) {
        server.middlewares.use('/', (req, res, next) => {
          // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
          res.setHeader('Access-Control-Allow-Origin', '*');
          res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
          res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
          
          // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è SVG —Ñ–∞–π–ª–æ–≤
          if (req.url && req.url.endsWith('.svg')) {
            res.setHeader('Content-Type', 'image/svg+xml');
            res.setHeader('Cache-Control', 'no-cache');
          }
          
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight –∑–∞–ø—Ä–æ—Å–æ–≤
          if (req.method === 'OPTIONS') {
            res.statusCode = 200;
            res.end();
            return;
          }
          
          next();
        });
      },
      
      buildStart() {
        console.log(`üöÄ Vite ${isProd ? 'build' : 'dev server'} –∑–∞–ø—É—â–µ–Ω`);
        if (!isProd) {
          console.log('üì° Dev server: http://localhost:5173');
          console.log('üîÑ HMR –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è –≥–æ—Ä—è—á–µ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏');
        }
      }
    }
  ],

  // =================================================================
  // –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
  // =================================================================
  optimizeDeps: {
    include: [
      // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –º–æ–¥—É–ª–∏
    ],
    exclude: [
      // –ò—Å–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω—É–∂–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å
    ]
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  esbuild: {
    target: 'es2020'
  }
});